# kubernetes/minio.yml

apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: minio-pvc
spec:
  # This defines how the volume can be mounted. ReadWriteOnce means
  # it can be mounted by a single node at a time.
  accessModes:
    - ReadWriteOnce
  resources:
    # We are requesting 1 GiB of storage.
    requests:
      storage: 1Gi

---

apiVersion: v1
kind: Service
metadata:
  # This is the internal DNS name that other services will use to talk to MinIO.
  name: minio-service
spec:
  type: NodePort
  selector:
    app: minio
  ports:
    # Port for the MinIO API
    - name: api
      protocol: TCP
      port: 9000
      targetPort: 9000
    # Port for the MinIO Web Console/UI
    - name: console
      protocol: TCP
      port: 9001
      targetPort: 9001
      nodePort: 30083 # We'll access the UI on this external port

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: minio-deployment
spec:
  replicas: 1
  selector:
    matchLabels:
      app: minio
  template:
    metadata:
      labels:
        app: minio
    spec:
      containers:
      - name: minio
        image: minio/minio:RELEASE.2023-07-21T21-12-44Z # A stable, public image
        ports:
        - containerPort: 9000
        - containerPort: 9001
        # Here we load the credentials from the Secret we created.
        envFrom:
        - secretRef:
            name: minio-secret
        # This command starts the MinIO server and tells it to store data in /data
        command: ["minio", "server", "/data", "--console-address", ":9001"]
        # --- THIS IS THE CRITICAL PART ---
        # This connects the PersistentVolumeClaim to a path inside the container.
        volumeMounts:
          - name: minio-storage
            mountPath: /data
      # And this defines the volume using the PVC we created above.
      volumes:
        - name: minio-storage
          persistentVolumeClaim:
            claimName: minio-pvc