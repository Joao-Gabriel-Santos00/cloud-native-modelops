# values-cloud.yaml

imagePullPolicy: IfNotPresent

# --- Redis (Internal Service) ---
redis:
  enabled: true
  replicaCount: 1
  image: { repository: redis, tag: "7" }
  probes: { enabled: true }
  resources: { requests: { cpu: 100m, memory: 128Mi }, limits: { cpu: 250m, memory: 256Mi } }

# --- MinIO (Disabled for Cloud) ---
minio:
  enabled: false # We are using AWS S3 instead.

# --- MLflow (Public-Facing Service) ---
mlflow:
  enabled: true
  serviceAccountName: s3-access-sa
  replicaCount: 1
  image: { repository: ghcr.io/mlflow/mlflow, tag: "v2.12.1" }
  service: { type: LoadBalancer, port: 5000 } # <-- CHANGED
  
  s3BucketName: jgpos-mlflow-bucket-s3 # <-- CHANGE THIS
  probes: { enabled: true }
  resources: { requests: { cpu: 100m, memory: 256Mi }, limits: { cpu: 500m, memory: 512Mi } }
  env: {} # This is empty because credentials come from the IAM Role.

# --- Model Server (Public-Facing Service) ---
modelServer:
  enabled: true
  serviceAccountName: s3-access-sa
  replicaCount: 1
  image: { repository: joaogabrielpos/model-server, tag: "0.2" } # <-- VERIFY THIS IS YOUR LATEST TAG
  service: { type: LoadBalancer, port: 8000 } # <-- CHANGED
  probes: { liveness: { initialDelaySeconds: 30, periodSeconds: 15 }, readiness: { initialDelaySeconds: 15, periodSeconds: 10 } }
  resources: { requests: { cpu: 100m, memory: 128Mi }, limits: { cpu: 500m, memory: 512Mi } }
  env: # This only contains internal cluster communication, no secrets.
    MLFLOW_TRACKING_URI: "http://mlflow-service:5000"
    REDIS_HOST: "redis-service"
    REDIS_PORT: "6379"
    AWS_REGION: "eu-west-3"
    MLFLOW_S3_ENDPOINT_URL: "https://s3.eu-west-3.amazonaws.com"
# --- Prometheus (Internal Service) ---
prometheus:
  enabled: true
  replicaCount: 1
  image: { repository: prom/prometheus, tag: "latest" }
  resources: { requests: { cpu: 100m, memory: 128Mi }, limits: { cpu: 500m, memory: 256Mi } }

# --- Grafana (Public-Facing Service) ---
grafana:
  enabled: true
  replicaCount: 1
  image: { repository: grafana/grafana, tag: "latest" }
  service: { type: LoadBalancer, port: 3000 } # <-- CHANGED
  resources: { requests: { cpu: 100m, memory: 128Mi }, limits: { cpu: 250m, memory: 256Mi } }

# --- Frontend (Public-Facing Service) ---
frontend:
  enabled: true
  replicaCount: 1
  image: { repository: joaogabrielpos/modelops-frontend, tag: "prod-0.6" } # <-- VERIFY THIS IS YOUR LATEST TAG
  service: { type: LoadBalancer, port: 80 } # <-- CHANGED
  resources: { requests: { cpu: 100m, memory: 128Mi }, limits: { cpu: 250m, memory: 256Mi } }